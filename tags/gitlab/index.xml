<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitLab on Maxence Collard-Lagalle</title><link>https://maxence.collard-lagalle.me/tags/gitlab/</link><description>Recent content in GitLab on Maxence Collard-Lagalle</description><generator>Hugo -- gohugo.io</generator><language>fr</language><lastBuildDate>Sun, 16 Apr 2023 19:00:00 +0100</lastBuildDate><atom:link href="https://maxence.collard-lagalle.me/tags/gitlab/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://maxence.collard-lagalle.me/posts/formations/git/introduction/</link><pubDate>Sun, 16 Apr 2023 19:00:00 +0100</pubDate><guid>https://maxence.collard-lagalle.me/posts/formations/git/introduction/</guid><description>Git a été créé par Linus Torvalds, le créateur du système d&amp;rsquo;exploitation Linux, en 2005. Il a été conçu pour être un VCS décentralisé, capable de gérer efficacement les grands projets open source tels que le développement du noyau Linux. Git a rapidement gagné en popularité auprès de la communauté du développement de logiciels en raison de sa rapidité, de sa facilité d&amp;rsquo;utilisation et de sa flexibilité.
Git, en tant que VCS décentralisé (ou distribué), permet à chaque développeur de disposer d&amp;rsquo;une copie complète de l&amp;rsquo;historique des modifications et du code source sur leur ordinateur.</description></item><item><title>Introduction à GitLab CI</title><link>https://maxence.collard-lagalle.me/posts/formations/git/gitlab-ci/</link><pubDate>Sun, 16 Apr 2023 19:00:00 +0100</pubDate><guid>https://maxence.collard-lagalle.me/posts/formations/git/gitlab-ci/</guid><description>L&amp;rsquo;intégration continue (Continuous Integration, CI) est une pratique de développement logiciel qui consiste à tester et à construire automatiquement un projet chaque fois qu&amp;rsquo;un développeur soumet un changement dans le code source. Cette pratique vise à détecter rapidement les erreurs de code et à garantir que le code est fonctionnel et prêt à être déployé.
Un pipeline d&amp;rsquo;intégration continue est un processus automatisé qui permet de construire, tester et déployer un projet.</description></item><item><title>Travailler avec GitLab</title><link>https://maxence.collard-lagalle.me/posts/formations/git/software-forge/</link><pubDate>Sun, 16 Apr 2023 19:00:00 +0100</pubDate><guid>https://maxence.collard-lagalle.me/posts/formations/git/software-forge/</guid><description>Une forge logicielle est une plateforme web qui permet aux développeurs de gérer leur code source, de collaborer sur des projets de développement, de suivre les bugs et les problèmes, et de déployer des applications. Outre le suivi de version basé sur Git, les forges logicielles incluent des fonctionnalités comme la création de merge requests, la gestion de bugs, la documentation, la gestion des tâches, les tests automatisés et les déploiements continus.</description></item></channel></rss>